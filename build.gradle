buildscript {
    repositories {
        mavenCentral()
        google()
        gradlePluginPortal()
    }
    dependencies {
        classpath "com.android.tools.build:gradle:7.1.0"
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:1.6.10"
        classpath "org.jetbrains.dokka:dokka-gradle-plugin:1.6.10"
        classpath "com.vanniktech:gradle-maven-publish-plugin:0.18.0"
        classpath "com.autonomousapps.dependency-analysis:com.autonomousapps.dependency-analysis.gradle.plugin:0.80.0"
        classpath "com.github.ben-manes:gradle-versions-plugin:0.41.0"
    }
}

apply plugin: "com.autonomousapps.dependency-analysis"
apply plugin: "com.github.ben-manes.versions"


allprojects {
    repositories {
        mavenCentral()
        google()
    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
}

dependencyAnalysis {
    issues {
        all {
            onAny {
                severity('fail')
            }

            onIncorrectConfiguration {
                // https://github.com/autonomousapps/dependency-analysis-android-gradle-plugin/issues/522
                exclude("androidx.compose.runtime:runtime")
            }
        }
    }
}

def isNonStable = { String version ->
  def stableKeyword = ['RELEASE', 'FINAL', 'GA'].any { it -> version.toUpperCase().contains(it) }
  def regex = /^[0-9,.v-]+(-r)?$/
  return !stableKeyword && !(version ==~ regex)
}

tasks.named("dependencyUpdates").configure {
  rejectVersionIf {
    isNonStable(it.candidate.version) && !isNonStable(it.currentVersion)
  }
}
